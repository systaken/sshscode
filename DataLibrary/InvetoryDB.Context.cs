//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLibrary
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class POInventoryEntities : DbContext
    {
        public POInventoryEntities()
            : base("name=POInventoryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ref_access> ref_access { get; set; }
        public DbSet<ref_category> ref_category { get; set; }
        public DbSet<ref_module> ref_module { get; set; }
        public DbSet<ref_product> ref_product { get; set; }
        public DbSet<ref_status> ref_status { get; set; }
        public DbSet<ref_user> ref_user { get; set; }
        public DbSet<trn_productDetail> trn_productDetail { get; set; }
        public DbSet<trn_transaction_log> trn_transaction_log { get; set; }
        public DbSet<trn_transactionSales_detail> trn_transactionSales_detail { get; set; }
        public DbSet<trn_customer> trn_customer { get; set; }
        public DbSet<trn_transactionSales> trn_transactionSales { get; set; }
        public DbSet<ref_supplier> ref_supplier { get; set; }
        public DbSet<ref_measurement> ref_measurement { get; set; }
        public DbSet<trn_product_release> trn_product_release { get; set; }
        public DbSet<trn_PO_item> trn_PO_item { get; set; }
        public DbSet<trn_PORequest> trn_PORequest { get; set; }
        public DbSet<ref_channel> ref_channel { get; set; }
        public DbSet<ref_customer_discount> ref_customer_discount { get; set; }
        public DbSet<ref_trucking> ref_trucking { get; set; }
        public DbSet<log_audit> log_audit { get; set; }
    
        public virtual int ref_category_Insert(Nullable<int> category_id, string categoryname)
        {
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("categoryname", categoryname) :
                new ObjectParameter("categoryname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_category_Insert", category_idParameter, categorynameParameter);
        }
    
        public virtual ObjectResult<ref_category_Search_Result> ref_category_Search(Nullable<int> category_id, string categoryname)
        {
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("categoryname", categoryname) :
                new ObjectParameter("categoryname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_category_Search_Result>("ref_category_Search", category_idParameter, categorynameParameter);
        }
    
        public virtual ObjectResult<ref_category_SelectAll_Result> ref_category_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_category_SelectAll_Result>("ref_category_SelectAll");
        }
    
        public virtual int ref_category_Update(Nullable<int> category_id, string categoryname)
        {
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("categoryname", categoryname) :
                new ObjectParameter("categoryname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_category_Update", category_idParameter, categorynameParameter);
        }
    
        public virtual ObjectResult<ref_product_SelectAll_Result> ref_product_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_product_SelectAll_Result>("ref_product_SelectAll");
        }
    
        public virtual int ref_user_Insert(Nullable<int> userid, string username, string password, Nullable<bool> isActive, string fullname, string position)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("Fullname", fullname) :
                new ObjectParameter("Fullname", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_user_Insert", useridParameter, usernameParameter, passwordParameter, isActiveParameter, fullnameParameter, positionParameter);
        }
    
        public virtual ObjectResult<ref_user_Search_Result> ref_user_Search(Nullable<int> userid, string username, string password, Nullable<bool> isActive, string fullname, string position)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("Fullname", fullname) :
                new ObjectParameter("Fullname", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_user_Search_Result>("ref_user_Search", useridParameter, usernameParameter, passwordParameter, isActiveParameter, fullnameParameter, positionParameter);
        }
    
        public virtual ObjectResult<ref_user_SelectAll_Result> ref_user_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_user_SelectAll_Result>("ref_user_SelectAll");
        }
    
        public virtual int ref_user_Update(Nullable<int> userid, string username, string password, Nullable<bool> isActive, string fullname, string position)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("Fullname", fullname) :
                new ObjectParameter("Fullname", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_user_Update", useridParameter, usernameParameter, passwordParameter, isActiveParameter, fullnameParameter, positionParameter);
        }
    
        public virtual int trn_productdetail_Insert(Nullable<int> product_detail_id, Nullable<int> product_id, string measurement, Nullable<double> measurevalue, Nullable<double> supplierprice, Nullable<double> retailprice, Nullable<int> qTY, Nullable<System.DateTime> dateupdated, Nullable<System.DateTime> datecreated, Nullable<int> updatedby, Nullable<int> isActive, Nullable<int> isDelete, Nullable<System.DateTime> expiryDate)
        {
            var product_detail_idParameter = product_detail_id.HasValue ?
                new ObjectParameter("product_detail_id", product_detail_id) :
                new ObjectParameter("product_detail_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("measurement", measurement) :
                new ObjectParameter("measurement", typeof(string));
    
            var measurevalueParameter = measurevalue.HasValue ?
                new ObjectParameter("measurevalue", measurevalue) :
                new ObjectParameter("measurevalue", typeof(double));
    
            var supplierpriceParameter = supplierprice.HasValue ?
                new ObjectParameter("supplierprice", supplierprice) :
                new ObjectParameter("supplierprice", typeof(double));
    
            var retailpriceParameter = retailprice.HasValue ?
                new ObjectParameter("retailprice", retailprice) :
                new ObjectParameter("retailprice", typeof(double));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(int));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_productdetail_Insert", product_detail_idParameter, product_idParameter, measurementParameter, measurevalueParameter, supplierpriceParameter, retailpriceParameter, qTYParameter, dateupdatedParameter, datecreatedParameter, updatedbyParameter, isActiveParameter, isDeleteParameter, expiryDateParameter);
        }
    
        public virtual ObjectResult<trn_productDetail_Search_Result> trn_productDetail_Search(Nullable<int> product_detail_id, Nullable<int> product_id, string measurement, Nullable<double> measurevalue, Nullable<double> supplierprice, Nullable<double> retailprice, Nullable<int> qTY, Nullable<System.DateTime> dateupdated, Nullable<System.DateTime> datecreated, Nullable<int> updatedby, Nullable<int> isActive, Nullable<int> isDelete, Nullable<System.DateTime> expiryDate)
        {
            var product_detail_idParameter = product_detail_id.HasValue ?
                new ObjectParameter("product_detail_id", product_detail_id) :
                new ObjectParameter("product_detail_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("measurement", measurement) :
                new ObjectParameter("measurement", typeof(string));
    
            var measurevalueParameter = measurevalue.HasValue ?
                new ObjectParameter("measurevalue", measurevalue) :
                new ObjectParameter("measurevalue", typeof(double));
    
            var supplierpriceParameter = supplierprice.HasValue ?
                new ObjectParameter("supplierprice", supplierprice) :
                new ObjectParameter("supplierprice", typeof(double));
    
            var retailpriceParameter = retailprice.HasValue ?
                new ObjectParameter("retailprice", retailprice) :
                new ObjectParameter("retailprice", typeof(double));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(int));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_productDetail_Search_Result>("trn_productDetail_Search", product_detail_idParameter, product_idParameter, measurementParameter, measurevalueParameter, supplierpriceParameter, retailpriceParameter, qTYParameter, dateupdatedParameter, datecreatedParameter, updatedbyParameter, isActiveParameter, isDeleteParameter, expiryDateParameter);
        }
    
        public virtual ObjectResult<trn_productdetail_SelectAll_Result> trn_productdetail_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_productdetail_SelectAll_Result>("trn_productdetail_SelectAll");
        }
    
        public virtual int trn_productdetail_Update(Nullable<int> product_detail_id, Nullable<int> product_id, string measurement, Nullable<double> measurevalue, Nullable<double> supplierprice, Nullable<double> retailprice, Nullable<int> qTY, Nullable<System.DateTime> dateupdated, Nullable<System.DateTime> datecreated, Nullable<int> updatedby, Nullable<int> isActive, Nullable<int> isDelete, Nullable<System.DateTime> expiryDate)
        {
            var product_detail_idParameter = product_detail_id.HasValue ?
                new ObjectParameter("product_detail_id", product_detail_id) :
                new ObjectParameter("product_detail_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("measurement", measurement) :
                new ObjectParameter("measurement", typeof(string));
    
            var measurevalueParameter = measurevalue.HasValue ?
                new ObjectParameter("measurevalue", measurevalue) :
                new ObjectParameter("measurevalue", typeof(double));
    
            var supplierpriceParameter = supplierprice.HasValue ?
                new ObjectParameter("supplierprice", supplierprice) :
                new ObjectParameter("supplierprice", typeof(double));
    
            var retailpriceParameter = retailprice.HasValue ?
                new ObjectParameter("retailprice", retailprice) :
                new ObjectParameter("retailprice", typeof(double));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var dateupdatedParameter = dateupdated.HasValue ?
                new ObjectParameter("dateupdated", dateupdated) :
                new ObjectParameter("dateupdated", typeof(System.DateTime));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby.HasValue ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(int));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_productdetail_Update", product_detail_idParameter, product_idParameter, measurementParameter, measurevalueParameter, supplierpriceParameter, retailpriceParameter, qTYParameter, dateupdatedParameter, datecreatedParameter, updatedbyParameter, isActiveParameter, isDeleteParameter, expiryDateParameter);
        }
    
        public virtual int ref_status_Insert(string statusname)
        {
            var statusnameParameter = statusname != null ?
                new ObjectParameter("statusname", statusname) :
                new ObjectParameter("statusname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_status_Insert", statusnameParameter);
        }
    
        public virtual ObjectResult<ref_status_SelectAll_Result> ref_status_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_status_SelectAll_Result>("ref_status_SelectAll");
        }
    
        public virtual ObjectResult<idResult> trn_customer_Insert(string firstname, string lastname, string middle, string gender, Nullable<System.DateTime> bBdate, string address, string city, string country, string telNos, string cpno, string emailaddress, Nullable<System.DateTime> datecreated, string agentName, string terms, Nullable<double> discount, string businessName, Nullable<int> truck_id, Nullable<bool> isDelete)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var middleParameter = middle != null ?
                new ObjectParameter("Middle", middle) :
                new ObjectParameter("Middle", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var bBdateParameter = bBdate.HasValue ?
                new ObjectParameter("bBdate", bBdate) :
                new ObjectParameter("bBdate", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var telNosParameter = telNos != null ?
                new ObjectParameter("TelNos", telNos) :
                new ObjectParameter("TelNos", typeof(string));
    
            var cpnoParameter = cpno != null ?
                new ObjectParameter("cpno", cpno) :
                new ObjectParameter("cpno", typeof(string));
    
            var emailaddressParameter = emailaddress != null ?
                new ObjectParameter("emailaddress", emailaddress) :
                new ObjectParameter("emailaddress", typeof(string));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var agentNameParameter = agentName != null ?
                new ObjectParameter("AgentName", agentName) :
                new ObjectParameter("AgentName", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var truck_idParameter = truck_id.HasValue ?
                new ObjectParameter("truck_id", truck_id) :
                new ObjectParameter("truck_id", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<idResult>("trn_customer_Insert", firstnameParameter, lastnameParameter, middleParameter, genderParameter, bBdateParameter, addressParameter, cityParameter, countryParameter, telNosParameter, cpnoParameter, emailaddressParameter, datecreatedParameter, agentNameParameter, termsParameter, discountParameter, businessNameParameter, truck_idParameter, isDeleteParameter);
        }
    
        public virtual ObjectResult<trn_customer_Search_Result> trn_customer_Search(Nullable<int> customer_id, string firstname, string lastname, string middle, string gender, Nullable<System.DateTime> bBdate, string address, string city, string country, string telNos, string cpno, string emailaddress, Nullable<System.DateTime> datecreated)
        {
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var middleParameter = middle != null ?
                new ObjectParameter("Middle", middle) :
                new ObjectParameter("Middle", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var bBdateParameter = bBdate.HasValue ?
                new ObjectParameter("bBdate", bBdate) :
                new ObjectParameter("bBdate", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var telNosParameter = telNos != null ?
                new ObjectParameter("TelNos", telNos) :
                new ObjectParameter("TelNos", typeof(string));
    
            var cpnoParameter = cpno != null ?
                new ObjectParameter("cpno", cpno) :
                new ObjectParameter("cpno", typeof(string));
    
            var emailaddressParameter = emailaddress != null ?
                new ObjectParameter("emailaddress", emailaddress) :
                new ObjectParameter("emailaddress", typeof(string));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_customer_Search_Result>("trn_customer_Search", customer_idParameter, firstnameParameter, lastnameParameter, middleParameter, genderParameter, bBdateParameter, addressParameter, cityParameter, countryParameter, telNosParameter, cpnoParameter, emailaddressParameter, datecreatedParameter);
        }
    
        public virtual ObjectResult<trn_customer_SelectAll_Result> trn_customer_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_customer_SelectAll_Result>("trn_customer_SelectAll");
        }
    
        public virtual int trn_customer_Update(Nullable<int> customer_id, string firstname, string lastname, string middle, string gender, Nullable<System.DateTime> bBdate, string address, string city, string country, string telNos, string cpno, string emailaddress, Nullable<System.DateTime> datecreated, string agentName, string terms, Nullable<double> discount, string businessName, Nullable<int> truck_id)
        {
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("customer_id", customer_id) :
                new ObjectParameter("customer_id", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var middleParameter = middle != null ?
                new ObjectParameter("Middle", middle) :
                new ObjectParameter("Middle", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var bBdateParameter = bBdate.HasValue ?
                new ObjectParameter("bBdate", bBdate) :
                new ObjectParameter("bBdate", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var telNosParameter = telNos != null ?
                new ObjectParameter("TelNos", telNos) :
                new ObjectParameter("TelNos", typeof(string));
    
            var cpnoParameter = cpno != null ?
                new ObjectParameter("cpno", cpno) :
                new ObjectParameter("cpno", typeof(string));
    
            var emailaddressParameter = emailaddress != null ?
                new ObjectParameter("emailaddress", emailaddress) :
                new ObjectParameter("emailaddress", typeof(string));
    
            var datecreatedParameter = datecreated.HasValue ?
                new ObjectParameter("datecreated", datecreated) :
                new ObjectParameter("datecreated", typeof(System.DateTime));
    
            var agentNameParameter = agentName != null ?
                new ObjectParameter("AgentName", agentName) :
                new ObjectParameter("AgentName", typeof(string));
    
            var termsParameter = terms != null ?
                new ObjectParameter("Terms", terms) :
                new ObjectParameter("Terms", typeof(string));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var truck_idParameter = truck_id.HasValue ?
                new ObjectParameter("truck_id", truck_id) :
                new ObjectParameter("truck_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_customer_Update", customer_idParameter, firstnameParameter, lastnameParameter, middleParameter, genderParameter, bBdateParameter, addressParameter, cityParameter, countryParameter, telNosParameter, cpnoParameter, emailaddressParameter, datecreatedParameter, agentNameParameter, termsParameter, discountParameter, businessNameParameter, truck_idParameter);
        }
    
        public virtual int trn_transaction_log_Insert(Nullable<int> sales_id, string current_status, string statusby, Nullable<System.DateTime> dateUpdated)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var current_statusParameter = current_status != null ?
                new ObjectParameter("current_status", current_status) :
                new ObjectParameter("current_status", typeof(string));
    
            var statusbyParameter = statusby != null ?
                new ObjectParameter("statusby", statusby) :
                new ObjectParameter("statusby", typeof(string));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transaction_log_Insert", sales_idParameter, current_statusParameter, statusbyParameter, dateUpdatedParameter);
        }
    
        public virtual ObjectResult<trn_transaction_log_Search_Result> trn_transaction_log_Search(Nullable<int> statusLog_id, Nullable<int> sales_id, string current_status, string statusby, Nullable<System.DateTime> dateUpdated)
        {
            var statusLog_idParameter = statusLog_id.HasValue ?
                new ObjectParameter("statusLog_id", statusLog_id) :
                new ObjectParameter("statusLog_id", typeof(int));
    
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var current_statusParameter = current_status != null ?
                new ObjectParameter("current_status", current_status) :
                new ObjectParameter("current_status", typeof(string));
    
            var statusbyParameter = statusby != null ?
                new ObjectParameter("statusby", statusby) :
                new ObjectParameter("statusby", typeof(string));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("DateUpdated", dateUpdated) :
                new ObjectParameter("DateUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transaction_log_Search_Result>("trn_transaction_log_Search", statusLog_idParameter, sales_idParameter, current_statusParameter, statusbyParameter, dateUpdatedParameter);
        }
    
        public virtual ObjectResult<trn_transaction_log_SelectAll_Result> trn_transaction_log_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transaction_log_SelectAll_Result>("trn_transaction_log_SelectAll");
        }
    
        public virtual int trn_transactionsales_detail_Insert(string productcode, Nullable<int> sales_id, Nullable<int> product_id, Nullable<double> retailPrice, Nullable<int> qTY, Nullable<double> totalAmount, Nullable<bool> isCheckedout)
        {
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var retailPriceParameter = retailPrice.HasValue ?
                new ObjectParameter("RetailPrice", retailPrice) :
                new ObjectParameter("RetailPrice", typeof(double));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var isCheckedoutParameter = isCheckedout.HasValue ?
                new ObjectParameter("isCheckedout", isCheckedout) :
                new ObjectParameter("isCheckedout", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transactionsales_detail_Insert", productcodeParameter, sales_idParameter, product_idParameter, retailPriceParameter, qTYParameter, totalAmountParameter, isCheckedoutParameter);
        }
    
        public virtual ObjectResult<trn_transactionSales_detail_Search_Result> trn_transactionSales_detail_Search(Nullable<int> sales_detail_id, string productcode, Nullable<int> product_id, Nullable<double> retailPrice, Nullable<int> qTY, Nullable<double> totalAmount, Nullable<bool> isCheckedout)
        {
            var sales_detail_idParameter = sales_detail_id.HasValue ?
                new ObjectParameter("sales_detail_id", sales_detail_id) :
                new ObjectParameter("sales_detail_id", typeof(int));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var retailPriceParameter = retailPrice.HasValue ?
                new ObjectParameter("RetailPrice", retailPrice) :
                new ObjectParameter("RetailPrice", typeof(double));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var isCheckedoutParameter = isCheckedout.HasValue ?
                new ObjectParameter("isCheckedout", isCheckedout) :
                new ObjectParameter("isCheckedout", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionSales_detail_Search_Result>("trn_transactionSales_detail_Search", sales_detail_idParameter, productcodeParameter, product_idParameter, retailPriceParameter, qTYParameter, totalAmountParameter, isCheckedoutParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_detail_SelectAll_Result> trn_transactionsales_detail_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_detail_SelectAll_Result>("trn_transactionsales_detail_SelectAll");
        }
    
        public virtual int trn_transactionsales_detail_Update(Nullable<int> sales_detail_id, string productcode, Nullable<int> product_id, Nullable<double> retailPrice, Nullable<int> qTY, Nullable<double> totalAmount, Nullable<bool> isCheckedout)
        {
            var sales_detail_idParameter = sales_detail_id.HasValue ?
                new ObjectParameter("sales_detail_id", sales_detail_id) :
                new ObjectParameter("sales_detail_id", typeof(int));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var retailPriceParameter = retailPrice.HasValue ?
                new ObjectParameter("RetailPrice", retailPrice) :
                new ObjectParameter("RetailPrice", typeof(double));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var isCheckedoutParameter = isCheckedout.HasValue ?
                new ObjectParameter("isCheckedout", isCheckedout) :
                new ObjectParameter("isCheckedout", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transactionsales_detail_Update", sales_detail_idParameter, productcodeParameter, product_idParameter, retailPriceParameter, qTYParameter, totalAmountParameter, isCheckedoutParameter);
        }
    
        public virtual int trn_transactionsales_Insert(string referenceNo, Nullable<double> totalAmount, Nullable<double> discounted, Nullable<double> grandTotal, Nullable<double> amountPaid, Nullable<double> payBalance, string status, Nullable<bool> isPaid, Nullable<bool> isVoided, string transactionType, Nullable<int> customerId, Nullable<System.DateTime> dateCreated, Nullable<System.DateTime> dateUpdated, string processed_by)
        {
            var referenceNoParameter = referenceNo != null ?
                new ObjectParameter("referenceNo", referenceNo) :
                new ObjectParameter("referenceNo", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var discountedParameter = discounted.HasValue ?
                new ObjectParameter("Discounted", discounted) :
                new ObjectParameter("Discounted", typeof(double));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("GrandTotal", grandTotal) :
                new ObjectParameter("GrandTotal", typeof(double));
    
            var amountPaidParameter = amountPaid.HasValue ?
                new ObjectParameter("AmountPaid", amountPaid) :
                new ObjectParameter("AmountPaid", typeof(double));
    
            var payBalanceParameter = payBalance.HasValue ?
                new ObjectParameter("PayBalance", payBalance) :
                new ObjectParameter("PayBalance", typeof(double));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var isPaidParameter = isPaid.HasValue ?
                new ObjectParameter("isPaid", isPaid) :
                new ObjectParameter("isPaid", typeof(bool));
    
            var isVoidedParameter = isVoided.HasValue ?
                new ObjectParameter("isVoided", isVoided) :
                new ObjectParameter("isVoided", typeof(bool));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("dateUpdated", dateUpdated) :
                new ObjectParameter("dateUpdated", typeof(System.DateTime));
    
            var processed_byParameter = processed_by != null ?
                new ObjectParameter("processed_by", processed_by) :
                new ObjectParameter("processed_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transactionsales_Insert", referenceNoParameter, totalAmountParameter, discountedParameter, grandTotalParameter, amountPaidParameter, payBalanceParameter, statusParameter, isPaidParameter, isVoidedParameter, transactionTypeParameter, customerIdParameter, dateCreatedParameter, dateUpdatedParameter, processed_byParameter);
        }
    
        public virtual ObjectResult<trn_transactionSales_Search_Result> trn_transactionSales_Search(Nullable<int> sales_id, string referenceNo, Nullable<double> totalAmount, Nullable<double> discounted, Nullable<double> grandTotal, Nullable<double> payBalance, string status, Nullable<bool> isPaid, Nullable<bool> isVoided, Nullable<int> customerId, Nullable<System.DateTime> dateCreated, Nullable<System.DateTime> dateUpdated, string processed_by, Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var referenceNoParameter = referenceNo != null ?
                new ObjectParameter("referenceNo", referenceNo) :
                new ObjectParameter("referenceNo", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var discountedParameter = discounted.HasValue ?
                new ObjectParameter("Discounted", discounted) :
                new ObjectParameter("Discounted", typeof(double));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("GrandTotal", grandTotal) :
                new ObjectParameter("GrandTotal", typeof(double));
    
            var payBalanceParameter = payBalance.HasValue ?
                new ObjectParameter("PayBalance", payBalance) :
                new ObjectParameter("PayBalance", typeof(double));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var isPaidParameter = isPaid.HasValue ?
                new ObjectParameter("isPaid", isPaid) :
                new ObjectParameter("isPaid", typeof(bool));
    
            var isVoidedParameter = isVoided.HasValue ?
                new ObjectParameter("isVoided", isVoided) :
                new ObjectParameter("isVoided", typeof(bool));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("dateUpdated", dateUpdated) :
                new ObjectParameter("dateUpdated", typeof(System.DateTime));
    
            var processed_byParameter = processed_by != null ?
                new ObjectParameter("processed_by", processed_by) :
                new ObjectParameter("processed_by", typeof(string));
    
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionSales_Search_Result>("trn_transactionSales_Search", sales_idParameter, referenceNoParameter, totalAmountParameter, discountedParameter, grandTotalParameter, payBalanceParameter, statusParameter, isPaidParameter, isVoidedParameter, customerIdParameter, dateCreatedParameter, dateUpdatedParameter, processed_byParameter, datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_SelectAll_Result> trn_transactionsales_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_SelectAll_Result>("trn_transactionsales_SelectAll");
        }
    
        public virtual int trn_transactionsales_Update(Nullable<int> sales_id, string referenceNo, Nullable<double> totalAmount, Nullable<double> discounted, Nullable<double> grandTotal, Nullable<double> amountPaid, Nullable<double> payBalance, string status, Nullable<bool> isPaid, Nullable<bool> isVoided, string transactionType, Nullable<int> customerId, string payterms, Nullable<int> nosofdays, Nullable<System.DateTime> dateUpdated, string processed_by)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var referenceNoParameter = referenceNo != null ?
                new ObjectParameter("referenceNo", referenceNo) :
                new ObjectParameter("referenceNo", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var discountedParameter = discounted.HasValue ?
                new ObjectParameter("Discounted", discounted) :
                new ObjectParameter("Discounted", typeof(double));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("GrandTotal", grandTotal) :
                new ObjectParameter("GrandTotal", typeof(double));
    
            var amountPaidParameter = amountPaid.HasValue ?
                new ObjectParameter("AmountPaid", amountPaid) :
                new ObjectParameter("AmountPaid", typeof(double));
    
            var payBalanceParameter = payBalance.HasValue ?
                new ObjectParameter("PayBalance", payBalance) :
                new ObjectParameter("PayBalance", typeof(double));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var isPaidParameter = isPaid.HasValue ?
                new ObjectParameter("isPaid", isPaid) :
                new ObjectParameter("isPaid", typeof(bool));
    
            var isVoidedParameter = isVoided.HasValue ?
                new ObjectParameter("isVoided", isVoided) :
                new ObjectParameter("isVoided", typeof(bool));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var paytermsParameter = payterms != null ?
                new ObjectParameter("payterms", payterms) :
                new ObjectParameter("payterms", typeof(string));
    
            var nosofdaysParameter = nosofdays.HasValue ?
                new ObjectParameter("nosofdays", nosofdays) :
                new ObjectParameter("nosofdays", typeof(int));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("dateUpdated", dateUpdated) :
                new ObjectParameter("dateUpdated", typeof(System.DateTime));
    
            var processed_byParameter = processed_by != null ?
                new ObjectParameter("processed_by", processed_by) :
                new ObjectParameter("processed_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transactionsales_Update", sales_idParameter, referenceNoParameter, totalAmountParameter, discountedParameter, grandTotalParameter, amountPaidParameter, payBalanceParameter, statusParameter, isPaidParameter, isVoidedParameter, transactionTypeParameter, customerIdParameter, paytermsParameter, nosofdaysParameter, dateUpdatedParameter, processed_byParameter);
        }
    
        public virtual int trn_transactionsales_detail_Delete(Nullable<int> sales_detail_id, Nullable<System.Guid> updater)
        {
            var sales_detail_idParameter = sales_detail_id.HasValue ?
                new ObjectParameter("sales_detail_id", sales_detail_id) :
                new ObjectParameter("sales_detail_id", typeof(int));
    
            var updaterParameter = updater.HasValue ?
                new ObjectParameter("updater", updater) :
                new ObjectParameter("updater", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transactionsales_detail_Delete", sales_detail_idParameter, updaterParameter);
        }
    
        public virtual int ref_product_Insert(Nullable<int> product_id, Nullable<int> category_id, string productCode, string productName, string productDescription, string barcode, string measurement, Nullable<double> supplierprice, Nullable<double> retailprice, Nullable<int> qTY, Nullable<int> criticalQTY, string unitWeight, Nullable<double> weight, Nullable<System.DateTime> expirydate, Nullable<bool> isDelete, Nullable<bool> isActive, Nullable<int> supplier_id, Nullable<System.DateTime> dateCreated, Nullable<int> updatedBy, Nullable<System.DateTime> dateUpdated)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("measurement", measurement) :
                new ObjectParameter("measurement", typeof(string));
    
            var supplierpriceParameter = supplierprice.HasValue ?
                new ObjectParameter("supplierprice", supplierprice) :
                new ObjectParameter("supplierprice", typeof(double));
    
            var retailpriceParameter = retailprice.HasValue ?
                new ObjectParameter("retailprice", retailprice) :
                new ObjectParameter("retailprice", typeof(double));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var criticalQTYParameter = criticalQTY.HasValue ?
                new ObjectParameter("criticalQTY", criticalQTY) :
                new ObjectParameter("criticalQTY", typeof(int));
    
            var unitWeightParameter = unitWeight != null ?
                new ObjectParameter("unitWeight", unitWeight) :
                new ObjectParameter("unitWeight", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var expirydateParameter = expirydate.HasValue ?
                new ObjectParameter("Expirydate", expirydate) :
                new ObjectParameter("Expirydate", typeof(System.DateTime));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var supplier_idParameter = supplier_id.HasValue ?
                new ObjectParameter("supplier_id", supplier_id) :
                new ObjectParameter("supplier_id", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("dateCreated", dateCreated) :
                new ObjectParameter("dateCreated", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("updatedBy", updatedBy) :
                new ObjectParameter("updatedBy", typeof(int));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("dateUpdated", dateUpdated) :
                new ObjectParameter("dateUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_product_Insert", product_idParameter, category_idParameter, productCodeParameter, productNameParameter, productDescriptionParameter, barcodeParameter, measurementParameter, supplierpriceParameter, retailpriceParameter, qTYParameter, criticalQTYParameter, unitWeightParameter, weightParameter, expirydateParameter, isDeleteParameter, isActiveParameter, supplier_idParameter, dateCreatedParameter, updatedByParameter, dateUpdatedParameter);
        }
    
        public virtual ObjectResult<ref_product_Search_Result1> ref_product_Search(Nullable<int> product_id, Nullable<int> category_id, string productCode, string productName, string productDescription, string barcode, string measurement, Nullable<double> supplierprice, Nullable<double> retailprice, Nullable<int> qTY, Nullable<int> criticalQTY, Nullable<System.DateTime> expirydate, Nullable<bool> isDelete, Nullable<bool> isActive, Nullable<int> supplier_id, Nullable<System.DateTime> dateCreated, Nullable<int> updatedBy, Nullable<System.DateTime> dateUpdated)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("measurement", measurement) :
                new ObjectParameter("measurement", typeof(string));
    
            var supplierpriceParameter = supplierprice.HasValue ?
                new ObjectParameter("supplierprice", supplierprice) :
                new ObjectParameter("supplierprice", typeof(double));
    
            var retailpriceParameter = retailprice.HasValue ?
                new ObjectParameter("retailprice", retailprice) :
                new ObjectParameter("retailprice", typeof(double));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var criticalQTYParameter = criticalQTY.HasValue ?
                new ObjectParameter("criticalQTY", criticalQTY) :
                new ObjectParameter("criticalQTY", typeof(int));
    
            var expirydateParameter = expirydate.HasValue ?
                new ObjectParameter("Expirydate", expirydate) :
                new ObjectParameter("Expirydate", typeof(System.DateTime));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var supplier_idParameter = supplier_id.HasValue ?
                new ObjectParameter("supplier_id", supplier_id) :
                new ObjectParameter("supplier_id", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("dateCreated", dateCreated) :
                new ObjectParameter("dateCreated", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("updatedBy", updatedBy) :
                new ObjectParameter("updatedBy", typeof(int));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("dateUpdated", dateUpdated) :
                new ObjectParameter("dateUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_product_Search_Result1>("ref_product_Search", product_idParameter, category_idParameter, productCodeParameter, productNameParameter, productDescriptionParameter, barcodeParameter, measurementParameter, supplierpriceParameter, retailpriceParameter, qTYParameter, criticalQTYParameter, expirydateParameter, isDeleteParameter, isActiveParameter, supplier_idParameter, dateCreatedParameter, updatedByParameter, dateUpdatedParameter);
        }
    
        public virtual int ref_product_Update(Nullable<int> product_id, Nullable<int> category_id, string productCode, string productName, string productDescription, string barcode, string measurement, Nullable<double> supplierprice, Nullable<double> retailprice, Nullable<int> criticalQTY, string unitWeight, Nullable<double> weight, Nullable<System.DateTime> expirydate, Nullable<bool> isDelete, Nullable<bool> isActive, Nullable<int> supplier_id, Nullable<int> updatedBy, Nullable<System.DateTime> dateUpdated)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("measurement", measurement) :
                new ObjectParameter("measurement", typeof(string));
    
            var supplierpriceParameter = supplierprice.HasValue ?
                new ObjectParameter("supplierprice", supplierprice) :
                new ObjectParameter("supplierprice", typeof(double));
    
            var retailpriceParameter = retailprice.HasValue ?
                new ObjectParameter("retailprice", retailprice) :
                new ObjectParameter("retailprice", typeof(double));
    
            var criticalQTYParameter = criticalQTY.HasValue ?
                new ObjectParameter("criticalQTY", criticalQTY) :
                new ObjectParameter("criticalQTY", typeof(int));
    
            var unitWeightParameter = unitWeight != null ?
                new ObjectParameter("unitWeight", unitWeight) :
                new ObjectParameter("unitWeight", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var expirydateParameter = expirydate.HasValue ?
                new ObjectParameter("Expirydate", expirydate) :
                new ObjectParameter("Expirydate", typeof(System.DateTime));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var supplier_idParameter = supplier_id.HasValue ?
                new ObjectParameter("supplier_id", supplier_id) :
                new ObjectParameter("supplier_id", typeof(int));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("updatedBy", updatedBy) :
                new ObjectParameter("updatedBy", typeof(int));
    
            var dateUpdatedParameter = dateUpdated.HasValue ?
                new ObjectParameter("dateUpdated", dateUpdated) :
                new ObjectParameter("dateUpdated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_product_Update", product_idParameter, category_idParameter, productCodeParameter, productNameParameter, productDescriptionParameter, barcodeParameter, measurementParameter, supplierpriceParameter, retailpriceParameter, criticalQTYParameter, unitWeightParameter, weightParameter, expirydateParameter, isDeleteParameter, isActiveParameter, supplier_idParameter, updatedByParameter, dateUpdatedParameter);
        }
    
        public virtual ObjectResult<ref_product_SelectById_Result> ref_product_SelectById(Nullable<int> product_id)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_product_SelectById_Result>("ref_product_SelectById", product_idParameter);
        }
    
        public virtual int ref_supplier_Insert(string supplier_name, string supplier_address, string supplier_contact, Nullable<bool> isDelete, Nullable<bool> isActive)
        {
            var supplier_nameParameter = supplier_name != null ?
                new ObjectParameter("Supplier_name", supplier_name) :
                new ObjectParameter("Supplier_name", typeof(string));
    
            var supplier_addressParameter = supplier_address != null ?
                new ObjectParameter("Supplier_address", supplier_address) :
                new ObjectParameter("Supplier_address", typeof(string));
    
            var supplier_contactParameter = supplier_contact != null ?
                new ObjectParameter("Supplier_contact", supplier_contact) :
                new ObjectParameter("Supplier_contact", typeof(string));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_supplier_Insert", supplier_nameParameter, supplier_addressParameter, supplier_contactParameter, isDeleteParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<ref_supplier_Search_Result> ref_supplier_Search(Nullable<int> supplier_id, string supplier_name, string supplier_address, string supplier_contact, Nullable<bool> isDelete, Nullable<bool> isActive)
        {
            var supplier_idParameter = supplier_id.HasValue ?
                new ObjectParameter("supplier_id", supplier_id) :
                new ObjectParameter("supplier_id", typeof(int));
    
            var supplier_nameParameter = supplier_name != null ?
                new ObjectParameter("Supplier_name", supplier_name) :
                new ObjectParameter("Supplier_name", typeof(string));
    
            var supplier_addressParameter = supplier_address != null ?
                new ObjectParameter("Supplier_address", supplier_address) :
                new ObjectParameter("Supplier_address", typeof(string));
    
            var supplier_contactParameter = supplier_contact != null ?
                new ObjectParameter("Supplier_contact", supplier_contact) :
                new ObjectParameter("Supplier_contact", typeof(string));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_supplier_Search_Result>("ref_supplier_Search", supplier_idParameter, supplier_nameParameter, supplier_addressParameter, supplier_contactParameter, isDeleteParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<ref_supplier_SelectAll_Result> ref_supplier_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_supplier_SelectAll_Result>("ref_supplier_SelectAll");
        }
    
        public virtual int ref_supplier_Update(Nullable<int> supplier_id, string supplier_name, string supplier_address, string supplier_contact, Nullable<bool> isDelete, Nullable<bool> isActive)
        {
            var supplier_idParameter = supplier_id.HasValue ?
                new ObjectParameter("supplier_id", supplier_id) :
                new ObjectParameter("supplier_id", typeof(int));
    
            var supplier_nameParameter = supplier_name != null ?
                new ObjectParameter("Supplier_name", supplier_name) :
                new ObjectParameter("Supplier_name", typeof(string));
    
            var supplier_addressParameter = supplier_address != null ?
                new ObjectParameter("Supplier_address", supplier_address) :
                new ObjectParameter("Supplier_address", typeof(string));
    
            var supplier_contactParameter = supplier_contact != null ?
                new ObjectParameter("Supplier_contact", supplier_contact) :
                new ObjectParameter("Supplier_contact", typeof(string));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_supplier_Update", supplier_idParameter, supplier_nameParameter, supplier_addressParameter, supplier_contactParameter, isDeleteParameter, isActiveParameter);
        }
    
        public virtual int ref_measurement_Insert(Nullable<int> measure_id, string measurement)
        {
            var measure_idParameter = measure_id.HasValue ?
                new ObjectParameter("measure_id", measure_id) :
                new ObjectParameter("measure_id", typeof(int));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("measurement", measurement) :
                new ObjectParameter("measurement", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_measurement_Insert", measure_idParameter, measurementParameter);
        }
    
        public virtual ObjectResult<ref_measurement_SelectAll_Result> ref_measurement_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_measurement_SelectAll_Result>("ref_measurement_SelectAll");
        }
    
        public virtual ObjectResult<trn_customer_SelectbyId_Result> trn_customer_SelectbyId(Nullable<int> customer_id)
        {
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("Customer_id", customer_id) :
                new ObjectParameter("Customer_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_customer_SelectbyId_Result>("trn_customer_SelectbyId", customer_idParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_SelectbyId_Result> trn_transactionsales_SelectbyId(string sales_id)
        {
            var sales_idParameter = sales_id != null ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_SelectbyId_Result>("trn_transactionsales_SelectbyId", sales_idParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_Selectrefno_Result> trn_transactionsales_Selectrefno(string referenceNo)
        {
            var referenceNoParameter = referenceNo != null ?
                new ObjectParameter("referenceNo", referenceNo) :
                new ObjectParameter("referenceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_Selectrefno_Result>("trn_transactionsales_Selectrefno", referenceNoParameter);
        }
    
        public virtual int ref_user_Delete(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_user_Delete", useridParameter);
        }
    
        public virtual ObjectResult<ref_user_Login_Result> ref_user_Login(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_user_Login_Result>("ref_user_Login", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_detail_Selectbysales_id_Result> trn_transactionsales_detail_Selectbysales_id(Nullable<int> sales_id)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_detail_Selectbysales_id_Result>("trn_transactionsales_detail_Selectbysales_id", sales_idParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_detail_release_Result> trn_transactionsales_detail_release(Nullable<int> sales_id, string barcode, Nullable<bool> isCheckout)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var isCheckoutParameter = isCheckout.HasValue ?
                new ObjectParameter("isCheckout", isCheckout) :
                new ObjectParameter("isCheckout", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_detail_release_Result>("trn_transactionsales_detail_release", sales_idParameter, barcodeParameter, isCheckoutParameter);
        }
    
        public virtual int trn_transactionsales_detail_releasing_update(Nullable<int> sales_detail_id, Nullable<int> product_id, Nullable<int> qTY, Nullable<bool> isCheckedout)
        {
            var sales_detail_idParameter = sales_detail_id.HasValue ?
                new ObjectParameter("sales_detail_id", sales_detail_id) :
                new ObjectParameter("sales_detail_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var isCheckedoutParameter = isCheckedout.HasValue ?
                new ObjectParameter("isCheckedout", isCheckedout) :
                new ObjectParameter("isCheckedout", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transactionsales_detail_releasing_update", sales_detail_idParameter, product_idParameter, qTYParameter, isCheckedoutParameter);
        }
    
        public virtual int trn_transactionsales_void_update(Nullable<int> sales_id, string status, Nullable<bool> isPaid, Nullable<bool> isVoided, string processed_by)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var isPaidParameter = isPaid.HasValue ?
                new ObjectParameter("isPaid", isPaid) :
                new ObjectParameter("isPaid", typeof(bool));
    
            var isVoidedParameter = isVoided.HasValue ?
                new ObjectParameter("isVoided", isVoided) :
                new ObjectParameter("isVoided", typeof(bool));
    
            var processed_byParameter = processed_by != null ?
                new ObjectParameter("processed_by", processed_by) :
                new ObjectParameter("processed_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transactionsales_void_update", sales_idParameter, statusParameter, isPaidParameter, isVoidedParameter, processed_byParameter);
        }
    
        public virtual int trn_product_release_Insert(Nullable<int> sales_detail_id, Nullable<int> sales_id, Nullable<int> releaseQTY)
        {
            var sales_detail_idParameter = sales_detail_id.HasValue ?
                new ObjectParameter("sales_detail_id", sales_detail_id) :
                new ObjectParameter("sales_detail_id", typeof(int));
    
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var releaseQTYParameter = releaseQTY.HasValue ?
                new ObjectParameter("releaseQTY", releaseQTY) :
                new ObjectParameter("releaseQTY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_product_release_Insert", sales_detail_idParameter, sales_idParameter, releaseQTYParameter);
        }
    
        public virtual int trn_product_release_removed(Nullable<int> transactionlog_id)
        {
            var transactionlog_idParameter = transactionlog_id.HasValue ?
                new ObjectParameter("transactionlog_id", transactionlog_id) :
                new ObjectParameter("transactionlog_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_product_release_removed", transactionlog_idParameter);
        }
    
        public virtual ObjectResult<trn_product_release_SelectAll_Result> trn_product_release_SelectAll(Nullable<int> sales_id)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_product_release_SelectAll_Result>("trn_product_release_SelectAll", sales_idParameter);
        }
    
        public virtual int trn_product_release_update_qty(Nullable<int> transactionlog_id, string releaseQTY)
        {
            var transactionlog_idParameter = transactionlog_id.HasValue ?
                new ObjectParameter("transactionlog_id", transactionlog_id) :
                new ObjectParameter("transactionlog_id", typeof(int));
    
            var releaseQTYParameter = releaseQTY != null ?
                new ObjectParameter("releaseQTY", releaseQTY) :
                new ObjectParameter("releaseQTY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_product_release_update_qty", transactionlog_idParameter, releaseQTYParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_product_details_Result> trn_transactionsales_product_details(Nullable<int> sales_id, string barcode)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_product_details_Result>("trn_transactionsales_product_details", sales_idParameter, barcodeParameter);
        }
    
        public virtual int trn_transactionsales_detail_remove_update(Nullable<int> sales_detail_id, Nullable<bool> isCheckedout)
        {
            var sales_detail_idParameter = sales_detail_id.HasValue ?
                new ObjectParameter("sales_detail_id", sales_detail_id) :
                new ObjectParameter("sales_detail_id", typeof(int));
    
            var isCheckedoutParameter = isCheckedout.HasValue ?
                new ObjectParameter("isCheckedout", isCheckedout) :
                new ObjectParameter("isCheckedout", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transactionsales_detail_remove_update", sales_detail_idParameter, isCheckedoutParameter);
        }
    
        public virtual ObjectResult<trn_product_release_exists_Result> trn_product_release_exists(Nullable<int> sales_id, Nullable<int> sales_detail_id)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var sales_detail_idParameter = sales_detail_id.HasValue ?
                new ObjectParameter("sales_detail_id", sales_detail_id) :
                new ObjectParameter("sales_detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_product_release_exists_Result>("trn_product_release_exists", sales_idParameter, sales_detail_idParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_detail_isallrelease_Result> trn_transactionsales_detail_isallrelease(Nullable<int> sales_id, Nullable<bool> isCheckout)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var isCheckoutParameter = isCheckout.HasValue ?
                new ObjectParameter("isCheckout", isCheckout) :
                new ObjectParameter("isCheckout", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_detail_isallrelease_Result>("trn_transactionsales_detail_isallrelease", sales_idParameter, isCheckoutParameter);
        }
    
        public virtual int trn_transactionsales_Update_status(Nullable<int> sales_id, string status, string processed_by)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var processed_byParameter = processed_by != null ?
                new ObjectParameter("processed_by", processed_by) :
                new ObjectParameter("processed_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_transactionsales_Update_status", sales_idParameter, statusParameter, processed_byParameter);
        }
    
        public virtual int trn_stock_qty_update(Nullable<int> product_id, Nullable<int> qTY, Nullable<int> updatedBy, Nullable<int> command)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("updatedBy", updatedBy) :
                new ObjectParameter("updatedBy", typeof(int));
    
            var commandParameter = command.HasValue ?
                new ObjectParameter("command", command) :
                new ObjectParameter("command", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_stock_qty_update", product_idParameter, qTYParameter, updatedByParameter, commandParameter);
        }
    
        public virtual ObjectResult<trn_po_item_Checkedin_List_Result> trn_po_item_Checkedin_List(Nullable<int> po_id, Nullable<bool> isCheckedIn)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            var isCheckedInParameter = isCheckedIn.HasValue ?
                new ObjectParameter("isCheckedIn", isCheckedIn) :
                new ObjectParameter("isCheckedIn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_po_item_Checkedin_List_Result>("trn_po_item_Checkedin_List", po_idParameter, isCheckedInParameter);
        }
    
        public virtual int trn_po_item_Insert(Nullable<int> po_id, Nullable<int> product_id, Nullable<int> qTY, string measurement, Nullable<double> purchaseprice, Nullable<bool> isCheckedIn, Nullable<System.DateTime> dateUpdate, Nullable<int> releasedBy)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("Measurement", measurement) :
                new ObjectParameter("Measurement", typeof(string));
    
            var purchasepriceParameter = purchaseprice.HasValue ?
                new ObjectParameter("Purchaseprice", purchaseprice) :
                new ObjectParameter("Purchaseprice", typeof(double));
    
            var isCheckedInParameter = isCheckedIn.HasValue ?
                new ObjectParameter("isCheckedIn", isCheckedIn) :
                new ObjectParameter("isCheckedIn", typeof(bool));
    
            var dateUpdateParameter = dateUpdate.HasValue ?
                new ObjectParameter("DateUpdate", dateUpdate) :
                new ObjectParameter("DateUpdate", typeof(System.DateTime));
    
            var releasedByParameter = releasedBy.HasValue ?
                new ObjectParameter("ReleasedBy", releasedBy) :
                new ObjectParameter("ReleasedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_po_item_Insert", po_idParameter, product_idParameter, qTYParameter, measurementParameter, purchasepriceParameter, isCheckedInParameter, dateUpdateParameter, releasedByParameter);
        }
    
        public virtual ObjectResult<trn_po_item_List_Result> trn_po_item_List(Nullable<int> po_id)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_po_item_List_Result>("trn_po_item_List", po_idParameter);
        }
    
        public virtual int trn_po_item_Remove(Nullable<int> po_detail_id)
        {
            var po_detail_idParameter = po_detail_id.HasValue ?
                new ObjectParameter("po_detail_id", po_detail_id) :
                new ObjectParameter("po_detail_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_po_item_Remove", po_detail_idParameter);
        }
    
        public virtual int trn_po_item_Update(Nullable<int> po_detail_id, Nullable<int> product_id, Nullable<int> qTY, string measurement, Nullable<double> purchaseprice, Nullable<bool> isCheckedIn, Nullable<System.DateTime> dateUpdate, Nullable<int> releasedBy)
        {
            var po_detail_idParameter = po_detail_id.HasValue ?
                new ObjectParameter("po_detail_id", po_detail_id) :
                new ObjectParameter("po_detail_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("Measurement", measurement) :
                new ObjectParameter("Measurement", typeof(string));
    
            var purchasepriceParameter = purchaseprice.HasValue ?
                new ObjectParameter("Purchaseprice", purchaseprice) :
                new ObjectParameter("Purchaseprice", typeof(double));
    
            var isCheckedInParameter = isCheckedIn.HasValue ?
                new ObjectParameter("isCheckedIn", isCheckedIn) :
                new ObjectParameter("isCheckedIn", typeof(bool));
    
            var dateUpdateParameter = dateUpdate.HasValue ?
                new ObjectParameter("DateUpdate", dateUpdate) :
                new ObjectParameter("DateUpdate", typeof(System.DateTime));
    
            var releasedByParameter = releasedBy.HasValue ?
                new ObjectParameter("ReleasedBy", releasedBy) :
                new ObjectParameter("ReleasedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_po_item_Update", po_detail_idParameter, product_idParameter, qTYParameter, measurementParameter, purchasepriceParameter, isCheckedInParameter, dateUpdateParameter, releasedByParameter);
        }
    
        public virtual int trn_po_item_Update_status(Nullable<int> po_detail_id, Nullable<int> qTY, Nullable<bool> isCheckedIn, Nullable<System.DateTime> dateUpdate, Nullable<int> releasedBy)
        {
            var po_detail_idParameter = po_detail_id.HasValue ?
                new ObjectParameter("po_detail_id", po_detail_id) :
                new ObjectParameter("po_detail_id", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var isCheckedInParameter = isCheckedIn.HasValue ?
                new ObjectParameter("isCheckedIn", isCheckedIn) :
                new ObjectParameter("isCheckedIn", typeof(bool));
    
            var dateUpdateParameter = dateUpdate.HasValue ?
                new ObjectParameter("DateUpdate", dateUpdate) :
                new ObjectParameter("DateUpdate", typeof(System.DateTime));
    
            var releasedByParameter = releasedBy.HasValue ?
                new ObjectParameter("ReleasedBy", releasedBy) :
                new ObjectParameter("ReleasedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_po_item_Update_status", po_detail_idParameter, qTYParameter, isCheckedInParameter, dateUpdateParameter, releasedByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> trn_porequest_GetId(string poRef)
        {
            var poRefParameter = poRef != null ?
                new ObjectParameter("poRef", poRef) :
                new ObjectParameter("poRef", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("trn_porequest_GetId", poRefParameter);
        }
    
        public virtual int trn_porequest_Insert(string poRef, Nullable<double> totalAmount, Nullable<System.DateTime> dateCreated, Nullable<int> createdby, Nullable<bool> isCompleted, string status)
        {
            var poRefParameter = poRef != null ?
                new ObjectParameter("poRef", poRef) :
                new ObjectParameter("poRef", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(int));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("isCompleted", isCompleted) :
                new ObjectParameter("isCompleted", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_porequest_Insert", poRefParameter, totalAmountParameter, dateCreatedParameter, createdbyParameter, isCompletedParameter, statusParameter);
        }
    
        public virtual ObjectResult<trn_porequest_SelectAll_Result> trn_porequest_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_porequest_SelectAll_Result>("trn_porequest_SelectAll");
        }
    
        public virtual int trn_porequest_Update_amount(Nullable<int> po_id, Nullable<double> totalAmount)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_porequest_Update_amount", po_idParameter, totalAmountParameter);
        }
    
        public virtual int trn_porequest_Update_status(Nullable<int> po_id, Nullable<bool> isCompleted, string status)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("isCompleted", isCompleted) :
                new ObjectParameter("isCompleted", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("trn_porequest_Update_status", po_idParameter, isCompletedParameter, statusParameter);
        }
    
        public virtual ObjectResult<trn_po_item_List_bystatus_Result> trn_po_item_List_bystatus(Nullable<int> po_id, Nullable<bool> isCheckedIn)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            var isCheckedInParameter = isCheckedIn.HasValue ?
                new ObjectParameter("isCheckedIn", isCheckedIn) :
                new ObjectParameter("isCheckedIn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_po_item_List_bystatus_Result>("trn_po_item_List_bystatus", po_idParameter, isCheckedInParameter);
        }
    
        public virtual ObjectResult<trn_po_item_Checkedin_List_byBarcode_Result> trn_po_item_Checkedin_List_byBarcode(string barcode, Nullable<bool> isCheckedIn, Nullable<int> po_id)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var isCheckedInParameter = isCheckedIn.HasValue ?
                new ObjectParameter("isCheckedIn", isCheckedIn) :
                new ObjectParameter("isCheckedIn", typeof(bool));
    
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_po_item_Checkedin_List_byBarcode_Result>("trn_po_item_Checkedin_List_byBarcode", barcodeParameter, isCheckedInParameter, po_idParameter);
        }
    
        public virtual ObjectResult<trn_po_item_List_exists_Result> trn_po_item_List_exists(Nullable<int> po_id, Nullable<int> product_id, Nullable<bool> isCheckedIn)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var isCheckedInParameter = isCheckedIn.HasValue ?
                new ObjectParameter("isCheckedIn", isCheckedIn) :
                new ObjectParameter("isCheckedIn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_po_item_List_exists_Result>("trn_po_item_List_exists", po_idParameter, product_idParameter, isCheckedInParameter);
        }
    
        public virtual int ref_product_Update_QTY(Nullable<int> product_id, Nullable<int> qTY, Nullable<int> updatedBy)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("updatedBy", updatedBy) :
                new ObjectParameter("updatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_product_Update_QTY", product_idParameter, qTYParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<trn_PORequest_Search_Result> trn_PORequest_Search(Nullable<int> po_id, string poRef, Nullable<double> totalAmount, Nullable<System.DateTime> dateCreated, Nullable<int> createdby, Nullable<bool> isCompleted, string status, Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            var poRefParameter = poRef != null ?
                new ObjectParameter("poRef", poRef) :
                new ObjectParameter("poRef", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var createdbyParameter = createdby.HasValue ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(int));
    
            var isCompletedParameter = isCompleted.HasValue ?
                new ObjectParameter("isCompleted", isCompleted) :
                new ObjectParameter("isCompleted", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_PORequest_Search_Result>("trn_PORequest_Search", po_idParameter, poRefParameter, totalAmountParameter, dateCreatedParameter, createdbyParameter, isCompletedParameter, statusParameter, datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<customer_sales_date_Result> customer_sales_date(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<customer_sales_date_Result>("customer_sales_date", datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_product_details_select_Result> trn_transactionsales_product_details_select(Nullable<int> sales_id)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_product_details_select_Result>("trn_transactionsales_product_details_select", sales_idParameter);
        }
    
        public virtual ObjectResult<trn_po_item_List_select_Result> trn_po_item_List_select(Nullable<int> po_id)
        {
            var po_idParameter = po_id.HasValue ?
                new ObjectParameter("po_id", po_id) :
                new ObjectParameter("po_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_po_item_List_select_Result>("trn_po_item_List_select", po_idParameter);
        }
    
        public virtual ObjectResult<trn_po_item_List_select_all_Result> trn_po_item_List_select_all(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("Datefrom", datefrom) :
                new ObjectParameter("Datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_po_item_List_select_all_Result>("trn_po_item_List_select_all", datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_product_details_select_all_Result> trn_transactionsales_product_details_select_all(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("Datefrom", datefrom) :
                new ObjectParameter("Datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_product_details_select_all_Result>("trn_transactionsales_product_details_select_all", datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<trn_po_item_Checkedin_List_by_date_Result> trn_po_item_Checkedin_List_by_date(Nullable<bool> isCheckedIn, Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var isCheckedInParameter = isCheckedIn.HasValue ?
                new ObjectParameter("isCheckedIn", isCheckedIn) :
                new ObjectParameter("isCheckedIn", typeof(bool));
    
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_po_item_Checkedin_List_by_date_Result>("trn_po_item_Checkedin_List_by_date", isCheckedInParameter, datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<trn_transactionsales_product_details_select_bydate_Result> trn_transactionsales_product_details_select_bydate(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trn_transactionsales_product_details_select_bydate_Result>("trn_transactionsales_product_details_select_bydate", datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<customer_sales_receipt_Result> customer_sales_receipt(Nullable<int> sales_id)
        {
            var sales_idParameter = sales_id.HasValue ?
                new ObjectParameter("sales_id", sales_id) :
                new ObjectParameter("sales_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<customer_sales_receipt_Result>("customer_sales_receipt", sales_idParameter);
        }
    
        public virtual int ref_trucking_Insert(Nullable<int> trucking_id, string trucking_name, string platenos)
        {
            var trucking_idParameter = trucking_id.HasValue ?
                new ObjectParameter("trucking_id", trucking_id) :
                new ObjectParameter("trucking_id", typeof(int));
    
            var trucking_nameParameter = trucking_name != null ?
                new ObjectParameter("trucking_name", trucking_name) :
                new ObjectParameter("trucking_name", typeof(string));
    
            var platenosParameter = platenos != null ?
                new ObjectParameter("platenos", platenos) :
                new ObjectParameter("platenos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_trucking_Insert", trucking_idParameter, trucking_nameParameter, platenosParameter);
        }
    
        public virtual ObjectResult<ref_trucking_Search_Result> ref_trucking_Search(Nullable<int> trucking_id, string trucking_name, string platenos, Nullable<bool> isDelete)
        {
            var trucking_idParameter = trucking_id.HasValue ?
                new ObjectParameter("trucking_id", trucking_id) :
                new ObjectParameter("trucking_id", typeof(int));
    
            var trucking_nameParameter = trucking_name != null ?
                new ObjectParameter("trucking_name", trucking_name) :
                new ObjectParameter("trucking_name", typeof(string));
    
            var platenosParameter = platenos != null ?
                new ObjectParameter("platenos", platenos) :
                new ObjectParameter("platenos", typeof(string));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("isDelete", isDelete) :
                new ObjectParameter("isDelete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_trucking_Search_Result>("ref_trucking_Search", trucking_idParameter, trucking_nameParameter, platenosParameter, isDeleteParameter);
        }
    
        public virtual ObjectResult<ref_trucking_SelectAll_Result> ref_trucking_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ref_trucking_SelectAll_Result>("ref_trucking_SelectAll");
        }
    
        public virtual int ref_trucking_Update(Nullable<int> trucking_id, string trucking_name, string platenos)
        {
            var trucking_idParameter = trucking_id.HasValue ?
                new ObjectParameter("trucking_id", trucking_id) :
                new ObjectParameter("trucking_id", typeof(int));
    
            var trucking_nameParameter = trucking_name != null ?
                new ObjectParameter("trucking_name", trucking_name) :
                new ObjectParameter("trucking_name", typeof(string));
    
            var platenosParameter = platenos != null ?
                new ObjectParameter("platenos", platenos) :
                new ObjectParameter("platenos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ref_trucking_Update", trucking_idParameter, trucking_nameParameter, platenosParameter);
        }
    
        public virtual int log_audit_Insert(string logModule, string logError, Nullable<System.DateTime> dateCreated)
        {
            var logModuleParameter = logModule != null ?
                new ObjectParameter("logModule", logModule) :
                new ObjectParameter("logModule", typeof(string));
    
            var logErrorParameter = logError != null ?
                new ObjectParameter("logError", logError) :
                new ObjectParameter("logError", typeof(string));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("log_audit_Insert", logModuleParameter, logErrorParameter, dateCreatedParameter);
        }
    }
}
